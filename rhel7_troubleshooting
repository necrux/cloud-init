#cloud-config

users:
 - name: __user__
   sudo: ALL=(ALL) NOPASSWD:ALL
   lock-passwd: false
   ssh-authorized-keys:
      - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCryHk9HafLVLhLgVZQBlqNS/gUNfO2lPGTCm+csDUDURz6G3cvlSQsYs4jf8yeRMGmoXM6pzpTyhuMeFiUwVbp6V9jvFSl0mQPARaa4eJWVhmdOThQ2/O5mXCIYbUMWR3XIbuTy4C8YchTnSOazmo8QU1GZ6J7mJzvT88v1hoZMaozWm5dv3KcdIeVvroFfcesDL6wU8qx36Y5UvSr8L1RvELNkf1O0/cP58ErtMzYkwrhNbtXXMulRipxTOFVq5Esqu+USFnNWTIYMxInMDiUNmVdKhG2qn1kbwyhnbHjY5I6ODV1MrsY2Ckeu8Mtq7X/xDYITICldsKRjryLhi+n
 - name: dave
   lock-passwd: false

packages:
  - man
  - whois
  - vim
  - pwgen
  - telnet
  - dig
  - git 
  - httpd
  - mariadb-server
  - php
  - php-mysql
  - php-gd
  - php-mcrypt
  - php-pecl-zendopcache
  - screen
  - zip
  - unzip

runcmd:
  - yum update -y
  - systemctl enable httpd.service
  - systemctl enable mariadb.service
  - systemctl start mariadb.service
  - echo '[client]' > /root/.my.cnf
  - echo 'user=root' >> /root/.my.cnf
  - echo "password=$(pwgen -cv1 32)" >> /root/.my.cnf
  - mysql -e "DELETE FROM mysql.user WHERE User='';"
  - mysql -e "DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');"
  - mysql -e "DROP DATABASE test;"
  - mysql -e "DELETE FROM mysql.db WHERE Db='test' OR Db='test\_%'"
  - mysql -e "UPDATE mysql.user SET Password=PASSWORD('$(awk -F= '/password/ {print $2}' /root/.my.cnf)') WHERE User='root';"
  - mysql -e "flush privileges;"
  - sed -i 's/#PermitRootLogin yes/PermitRootLogin no/g' /etc/ssh/sshd_config
  - sed -i 's/#Port 22/Port __ssh-port__/g' /etc/ssh/sshd_config
  - sed -i 's/PasswordAuthentication yes/PasswordAuthentication no/g' /etc/ssh/sshd_config
  - sed -i 's/%wheel/#%wheel/g' /etc/sudoers
  - sed -i 's/HISTSIZE=1000/HISTSIZE=10000/' /etc/profile
  - echo $(pwgen -cv1 32)|passwd root --stdin
  - echo $(pwgen -cv1 32)|passwd __user__ --stdin
  - echo $(pwgen -cv1 32)|passwd dave --stdin
  - curl -s "http://artii.herokuapp.com/make?text=$HOSTNAME&font=bubble__" > /etc/motd_hostname
  - echo >> /etc/motd_hostname
  - sed -i 's/#PrintMotd yes/PrintMotd no/g' /etc/ssh/sshd_config
  - echo '/usr/local/bin/dynmotd' >> /etc/profile
  - systemctl restart sshd.service
  - firewall-cmd --zone=public --remove-service=ssh
  - firewall-cmd --zone=public --remove-service=ssh --permanent
  - firewall-cmd --zone=public --add-port=__ssh-port__/tcp
  - firewall-cmd --zone=public --add-port=__ssh-port__/tcp --permanent
  - firewall-cmd --zone=public --add-service=http
  - firewall-cmd --zone=public --add-service=http --permanent
  - echo 'smtp_sasl_security_options = noanonymous' >> /etc/postfix/main.cf
  - echo 'smtp_sasl_password_maps = static:postmaster@__domain__:__password__' >> /etc/postfix/main.cf
  - echo 'relayhost = smtp.mailgun.org' >> /etc/postfix/main.cf
  - echo 'smtp_sasl_auth_enable = yes' >> /etc/postfix/main.cf
  - echo 'ServerName localhost' >> /etc/httpd/conf/httpd.conf
  - echo 'Include vhost.d/*.conf' >> /etc/httpd/conf/httpd.conf
  - sed -i 's/^/#/' /etc/httpd/conf.d/welcome.conf
  - mkdir /etc/httpd/vhost.d/
  - mkdir -p /var/www/vhosts/wordpress.__DOMAIN__.com/
  - wget https://wordpress.org/latest.tar.gz
  - tar xzf latest.tar.gz -C /var/www/vhosts/wordpress.__DOMAIN__.com/
  - mv /var/www/vhosts/wordpress.__DOMAIN__.com/wordpress/* /var/www/vhosts/wordpress.__DOMAIN__.com/
  - rm -f latest.tar.gz
  - mv wordpress/* /var/www/vhosts/wordpress.__DOMAIN__.com/
  - rmdir /var/www/vhosts/wordpress.__DOMAIN__.com/wordpress/
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "create database wordpress;"
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "grant all on wordpress.* to 'wordpress_user'@'localhost' identified by 'wordpress-lover';"
  - mkdir -p /var/www/vhosts/magento.__DOMAIN__.com/
  - wget http://www.magentocommerce.com/downloads/assets/1.9.0.1/magento-1.9.0.1.tar.gz
  - wget http://www.magentocommerce.com/downloads/assets/1.9.0.0/magento-sample-data-1.9.0.0.tar.gz
  - tar zxf magento-1.9.0.1.tar.gz -C /var/www/vhosts/magento.__DOMAIN__.com/
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento/* /var/www/vhosts/magento.__DOMAIN__.com/
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento/.htaccess /var/www/vhosts/magento.__DOMAIN__.com/
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento/.htaccess.sample /var/www/vhosts/magento.__DOMAIN__.com/
  - rmdir /var/www/vhosts/magento.__DOMAIN__.com/magento/
  - tar zxf magento-sample-data-1.9.0.0.tar.gz -C /var/www/vhosts/magento.__DOMAIN__.com/
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento-sample-data-1.9.0.0/media/* /var/www/vhosts/magento.__DOMAIN__.com/ 
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento-sample-data-1.9.0.0/media/.htaccess /var/www/vhosts/magento.__DOMAIN__.com/media/ 
  - mv /var/www/vhosts/magento.__DOMAIN__.com/magento-sample-data-1.9.0.0/skin/* /var/www/vhosts/magento.__DOMAIN__.com/
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "create database magento;"
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "grant all on magento.* to 'magento_user'@'localhost' identified by 'magento-lover';"
  - cat /var/www/vhosts/magento.__DOMAIN__.com/magento-sample-data-1.9.0.0/magento_sample_data_for_1.9.0.0.sql|mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) magento
  - rm -rf /var/www/vhosts/magento.__DOMAIN__.com/magento-sample-data-1.9.0.0/
  - mkdir -p /var/www/vhosts/rackspace.__DOMAIN__.com/
  - wget http://joomlacode.org/gf/download/frsrelease/19822/161255/Joomla_3.3.6-Stable-Full_Package.tar.gz
  - tar zxf Joomla_3.3.6-Stable-Update_Package.tar.gz -C /var/www/vhosts/rackspace.__DOMAIN__.com/ 
  - rm -f Joomla_3.3.6-Stable-Update_Package.tar.gz
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "create database rackspace;"
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "grant all on rackspace.* to 'rackspace_user'@'localhost' identified by 'joomla-lover';"
  - mysql -uroot -p$(awk -F= '/password/ {print $2}' /root/.my.cnf) -e "flush privileges;"
  - chown -R apache:apache /var/www/vhosts/*
  - systemctl start httpd.service
  - mkdir /root/brown-bag
  - git clone https://github.com/necrux/Brown-Bag.git /root/brown-bag/

write_files:
-   encoding: text/plain
    content: |
       export PS1="[\u@\h \W \`if [ \$? = 0 ]; then echo \[\e[33m\]:\)\[\e[0m\]; else echo \[\e[31m\]:\(\[\e[0m\]; fi\`]\\$ "
    owner: root:root
    path: /etc/profile.d/ps.sh
    permissions: '0644'
-   encoding: text/plain
    content: |
       #!/bin/bash
       
       black='\e[0;30m'
       darkgray='\e[1;30m'
       blue='\e[0;34m'
       lightblue='\e[1;34m'
       green='\e[0;32m'
       lightgreen='\e[1;32m'
       cyan='\e[0;36m'
       lightcyan='\e[1;36m'
       red='\e[0;31m'
       lightred='\e[1;31m'
       purple='\e[0;35m'
       lightpurple='\e[1;35m'
       brownorange='\e[0;33m'
       yellow='\e[1;33m'
       lightgray='\e[0;37m'
       white='\e[1;37m'
       NC='\e[0m' # No Color
       
       echo -e "$green
       $(cat /etc/motd_hostname)
       $purple+++++++++++++++++:$lightgray System Data:$purple +++++++++++++++++++
       $purple+  $lightgray Hostname $purple=$lightgreen $HOSTNAME
       $purple+  $lightgray OS $purple=$lightgreen $(cat /etc/redhat-release)
       $purple+  $lightgray CPU $purple=$lightgreen $(awk -F': ' '/model name/ {print $2}' /proc/cpuinfo)
       $purple+  $lightgray Public IP: $purple=$lightgreen $(ip address show eth0|awk -F'[t /]' '/inet / {print $7}')
       $purple+  $lightgray Private IP: $purple=$lightgreen $(ip address show eth1|awk -F'[t /]' '/inet / {print $7}')
       $purple+  $lightgray Kernel $purple=$lightgreen $(uname -r)
       $purple+  $lightgray Uptime $purple=$lightgreen $(uptime|awk -F',' '{print $1}'|awk -F'up ' '{print $2}')
       $purple+  $lightgray Total Memory $purple=$lightgreen $(free -m|awk '/Mem/ {print $2}') MB
       $purple+  $lightgray Available Memory $purple=$lightgreen $(free -m|awk '/-\/+/ {printf $4 " MB ("; used=$3} /Mem/ {total=$2} END {printf("%.1f\n", used/total*100)}')% used)
       $purple+  $lightgray Current Runlevel $purple=$lightgreen $(runlevel|awk '{print $2}')
       $purple++++++++++++++++++:$lightgray User Data:$purple ++++++++++++++++++++
       $purple+  $lightgray Date $purple=$lightgreen $(date)
       $purple+  $lightgray Username $purple=$lightgreen $(whoami)
       $purple++++++++++++++++++:$lightgray Disk Info:$purple ++++++++++++++++++++
       $(for disk in $(cat /proc/partitions|egrep -v "major|[0-9]$|^$"|awk '{print $4}'); do echo -e $purple+  "$lightgray  /dev/$disk    $(if [ "$(cat /sys/block/$disk/queue/rotational)" == "0" ]; then echo -e "${green}SSD"; elif [ "$(cat /sys/block/$disk/queue/rotational)" == "1" ]; then echo -e "${green}HDD"; fi)"; done)
       $purple+++++++++++++++++++++++++++++++++++++++++++++++++++$lightgray
       "
    owner: root:root
    path: /usr/local/bin/dynmotd
    permissions: '0755'
-   encoding: text/plain
    content: |
       <VirtualHost *:80>
           ServerName wordpress.__DOMAIN__.com
           ServerAlias www.wordpress.__DOMAIN__.com
           DocumentRoot /var/www/vhosts/wordpress.__DOMAIN__.com
           CustomLog /var/log/httpd/access_wordpress.__DOMAIN__.com.log combined
           ErrorLog /var/log/httpd/error_wordpress.__DOMAIN__.com.log
           <Directory /var/www/vhosts/wordpress.__DOMAIN__.com>
               Options +FollowSymlinks -Indexes
               AllowOverride All
               Require all granted
           </Directory>
       </VirtualHost>
    owner: root:root
    path: /etc/httpd/vhost.d/wordpress.__DOMAIN__.com.conf
    permissions: '0644'
-   encoding: text/plain
    content: |
       <VirtualHost *:80>
           ServerName magento.__DOMAIN__.com
           ServerAlias www.magento.__DOMAIN__.com
           DocumentRoot /var/www/vhosts/magento.__DOMAIN__.com
           CustomLog /var/log/httpd/access_magento.__DOMAIN__.com.log combined
           ErrorLog /var/log/httpd/error_magento.__DOMAIN__.com.log
           <Directory /var/www/vhosts/magento.__DOMAIN__.com>
               Options +FollowSymlinks -Indexes
               AllowOverride All
               Require all granted
           </Directory>
       </VirtualHost>
    owner: root:root
    path: /etc/httpd/vhost.d/magento.__DOMAIN__.com.conf
    permissions: '0644'
-   encoding: text/plain
    content: |
       <VirtualHost *:80>
           ServerName rackspace.__DOMAIN__.com
           ServerAlias www.rackspace.__DOMAIN__.com
           DocumentRoot /var/www/vhosts/rackspace.__DOMAIN__.com
           CustomLog /var/log/httpd/access_rackspace.__DOMAIN__.com.log combined
           ErrorLog /var/log/httpd/error_rackspace.__DOMAIN__.com.log
           <Directory /var/www/vhosts/rackspace.__DOMAIN__.com>
               Options +FollowSymlinks -Indexes
               AllowOverride All
               Require all granted
           </Directory>
       </VirtualHost>
    owner: root:root
    path: /etc/httpd/vhost.d/rackspace.__DOMAIN__.com.conf
    permissions: '0644'
